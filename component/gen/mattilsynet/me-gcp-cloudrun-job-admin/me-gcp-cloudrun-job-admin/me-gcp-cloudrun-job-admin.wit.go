// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package megcpcloudrunjobadmin represents the imported interface "mattilsynet:me-gcp-cloudrun-job-admin/me-gcp-cloudrun-job-admin@0.1.0".
package megcpcloudrunjobadmin

import (
	"github.com/Mattilsynet/map-me-gcp-cloudrunjob/component/gen/mattilsynet/me-gcp-cloudrun-job-admin/types"
	"github.com/bytecodealliance/wasm-tools-go/cm"
)

// ManagedEnvironmentGcpManifest represents the type alias "mattilsynet:me-gcp-cloudrun-job-admin/me-gcp-cloudrun-job-admin@0.1.0#managed-environment-gcp-manifest".
//
// See [types.ManagedEnvironmentGcpManifest] for more information.
type ManagedEnvironmentGcpManifest = types.ManagedEnvironmentGcpManifest

// ErrorType represents the type alias "mattilsynet:me-gcp-cloudrun-job-admin/me-gcp-cloudrun-job-admin@0.1.0#error-type".
//
// See [types.ErrorType] for more information.
type ErrorType = types.ErrorType

// Error represents the type alias "mattilsynet:me-gcp-cloudrun-job-admin/me-gcp-cloudrun-job-admin@0.1.0#error".
//
// See [types.Error] for more information.
type Error = types.Error

// Update represents the imported function "update".
//
//	update: func(manifest: managed-environment-gcp-manifest) -> result<managed-environment-gcp-manifest,
//	error>
//
//go:nosplit
func Update(manifest ManagedEnvironmentGcpManifest) (result cm.Result[ErrorShape, ManagedEnvironmentGcpManifest, Error]) {
	manifest0, manifest1 := lower_ManagedEnvironmentGcpManifest(manifest)
	wasmimport_Update((*uint8)(manifest0), (uint32)(manifest1), &result)
	return
}

// Get represents the imported function "get".
//
//	get: func(manifest: managed-environment-gcp-manifest) -> result<managed-environment-gcp-manifest,
//	error>
//
//go:nosplit
func Get(manifest ManagedEnvironmentGcpManifest) (result cm.Result[ErrorShape, ManagedEnvironmentGcpManifest, Error]) {
	manifest0, manifest1 := lower_ManagedEnvironmentGcpManifest(manifest)
	wasmimport_Get((*uint8)(manifest0), (uint32)(manifest1), &result)
	return
}

// Delete represents the imported function "delete".
//
//	delete: func(manifest: managed-environment-gcp-manifest) -> result<managed-environment-gcp-manifest,
//	error>
//
//go:nosplit
func Delete(manifest ManagedEnvironmentGcpManifest) (result cm.Result[ErrorShape, ManagedEnvironmentGcpManifest, Error]) {
	manifest0, manifest1 := lower_ManagedEnvironmentGcpManifest(manifest)
	wasmimport_Delete((*uint8)(manifest0), (uint32)(manifest1), &result)
	return
}
